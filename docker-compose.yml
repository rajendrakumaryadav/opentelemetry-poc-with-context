networks:
  demo-network:
    name: demo-network
    driver: bridge

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app
    hostname: app
    env_file: '.env'
    networks:
      - demo-network
    ports:
      - "5000:5000"
      
  auth_server:
    build:
      context: .
      dockerfile: authserver.dockerfile
    container_name: auth
    hostname: auth
    env_file: '.env'
    networks:
      - demo-network
      
  grpc:
    build:
      context: .
      dockerfile: server.dockerfile
    container_name: grpc
    hostname: grpc
    env_file: '.env'
    networks:
      - demo-network

  jaeger:
    container_name: jaeger
    hostname: jaeger
    image: jaegertracing/all-in-one
    restart: always
    ports:
    - "16686:16686"
    - "14268"
    - "14250"
    networks:
     - demo-network
   
  zipkin:
    container_name: zipkin
    hostname: zipkin
    image: openzipkin/zipkin
    restart: always
    ports:
     - "9411:9411"
    networks:
      - demo-network
  
  otel-collector:
    container_name: otel-collector
    hostname: otel-collector
    image: otel/opentelemetry-collector:0.67.0
    restart: always
    volumes:
       - ./otel-collector-config.yaml:/etc/otel-collector-config.yml
    command: ["--config=/etc/otel-collector-config.yml", "${OTELCOL_ARGS}"]
    ports:
     - "1888:1888"
     - "4317:4317"
     - "8888:8888"
     - "8889:8889"
    depends_on:
     - jaeger
     - zipkin
    networks:
       - demo-network

  prometheus:
    container_name: prometheus
    hostname: prometheus
    image: prom/prometheus:latest
    restart: always
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
    - "9090:9090"
    networks:
      - demo-network